//generated by lazy
//author: seanlan
/**
//表结构
type BaseStruct struct {
	Package    string    //包名
	StructName string    //结构名
	TableName  string    //表名
	Members    []*Member //成员
}

// 字段结构
type Member struct {
	Name          string    //字段名
	Type          string    //字段类型
	NewType       string    //新字段类型
	ColumnName    string    //字段列名
	ColumnComment string    //字段注释
	ModelType     string    //字段模型类型
	JSONTag       string    //json tag
	GORMTag       string    //gorm tag
	NewTag        string    //新tag
}
*/

package sqlmodel

const TableNameApplicationArrangeFeeTx = "application_arrange_fee_tx"

var ApplicationArrangeFeeTxColumns = struct {
	ID              FieldBase
	ApplicationID   FieldBase
	SerialNo        FieldBase
	ChainSymbol     FieldBase
	ContractAddress FieldBase
	Symbol          FieldBase
	FromAddress     FieldBase
	ToAddress       FieldBase
	Value           FieldBase
	TokenID         FieldBase
	Hook            FieldBase
	SendTxID        FieldBase
	Generated       FieldBase
	Confirmed       FieldBase
	CreateAt        FieldBase
}{
	ID:              FieldBase{"id", "application_arrange_fee_tx.id"},
	ApplicationID:   FieldBase{"application_id", "application_arrange_fee_tx.application_id"},
	SerialNo:        FieldBase{"serial_no", "application_arrange_fee_tx.serial_no"},
	ChainSymbol:     FieldBase{"chain_symbol", "application_arrange_fee_tx.chain_symbol"},
	ContractAddress: FieldBase{"contract_address", "application_arrange_fee_tx.contract_address"},
	Symbol:          FieldBase{"symbol", "application_arrange_fee_tx.symbol"},
	FromAddress:     FieldBase{"from_address", "application_arrange_fee_tx.from_address"},
	ToAddress:       FieldBase{"to_address", "application_arrange_fee_tx.to_address"},
	Value:           FieldBase{"value", "application_arrange_fee_tx.value"},
	TokenID:         FieldBase{"token_id", "application_arrange_fee_tx.token_id"},
	Hook:            FieldBase{"hook", "application_arrange_fee_tx.hook"},
	SendTxID:        FieldBase{"send_tx_id", "application_arrange_fee_tx.send_tx_id"},
	Generated:       FieldBase{"generated", "application_arrange_fee_tx.generated"},
	Confirmed:       FieldBase{"confirmed", "application_arrange_fee_tx.confirmed"},
	CreateAt:        FieldBase{"create_at", "application_arrange_fee_tx.create_at"},
}

type ApplicationArrangeFeeTx struct {
	ID              int64   `json:"id" gorm:"column:id;type:bigint;primaryKey;autoIncrement"`              //
	ApplicationID   int64   `json:"application_id" gorm:"column:application_id;type:bigint;not null"`      //应用ID
	SerialNo        string  `json:"serial_no" gorm:"column:serial_no;type:varchar;not null"`               //订单序列号
	ChainSymbol     string  `json:"chain_symbol" gorm:"column:chain_symbol;type:varchar;not null"`         //链的符号
	ContractAddress string  `json:"contract_address" gorm:"column:contract_address;type:varchar;not null"` //代币合约地址，如果是空表示是主币
	Symbol          string  `json:"symbol" gorm:"column:symbol;type:varchar;not null"`                     //代币符号
	FromAddress     string  `json:"from_address" gorm:"column:from_address;type:varchar;not null"`         //费用钱包地址
	ToAddress       string  `json:"to_address" gorm:"column:to_address;type:varchar;not null"`             //收款地址
	Value           float64 `json:"value" gorm:"column:value;type:decimal;not null"`                       //数量
	TokenID         int64   `json:"token_id" gorm:"column:token_id;type:bigint;not null"`                  //tokenid （NFT）
	Hook            string  `json:"hook" gorm:"column:hook;type:varchar;not null"`                         //到账变动通知url
	SendTxID        int64   `json:"send_tx_id" gorm:"column:send_tx_id;type:bigint;not null"`              //发送交易ID
	Generated       int32   `json:"generated" gorm:"column:generated;type:int;not null"`                   //是否生成
	Confirmed       int32   `json:"confirmed" gorm:"column:confirmed;type:int;not null"`                   //是否确认
	CreateAt        int64   `json:"create_at" gorm:"column:create_at;type:bigint;not null"`                //申请时间
}

// TableName ApplicationArrangeFeeTx's table name
func (*ApplicationArrangeFeeTx) TableName() string {
	return TableNameApplicationArrangeFeeTx
}
