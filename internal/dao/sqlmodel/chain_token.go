//generated by lazy
//author: seanlan
/**
//表结构
type BaseStruct struct {
	Package    string    //包名
	StructName string    //结构名
	TableName  string    //表名
	Members    []*Member //成员
}

// 字段结构
type Member struct {
	Name          string    //字段名
	Type          string    //字段类型
	NewType       string    //新字段类型
	ColumnName    string    //字段列名
	ColumnComment string    //字段注释
	ModelType     string    //字段模型类型
	JSONTag       string    //json tag
	GORMTag       string    //gorm tag
	NewTag        string    //新tag
}
*/

package sqlmodel

const TableNameChainToken = "chain_token"

var ChainTokenColumns = struct {
	ChainSymbol     FieldBase
	ContractAddress FieldBase
	Decimals        FieldBase
	ID              FieldBase
	Name            FieldBase
	Symbol          FieldBase
}{
	ChainSymbol:     FieldBase{"`chain_symbol`"},
	ContractAddress: FieldBase{"`contract_address`"},
	Decimals:        FieldBase{"`decimals`"},
	ID:              FieldBase{"`id`"},
	Name:            FieldBase{"`name`"},
	Symbol:          FieldBase{"`symbol`"},
}

type ChainToken struct {
	ChainSymbol     string `json:"chain_symbol" gorm:"column:chain_symbol;type:varchar(200);not null"`         //链的符号
	ContractAddress string `json:"contract_address" gorm:"column:contract_address;type:varchar(200);not null"` //代币合约地址，如果是空表示是主币
	Decimals        int32  `json:"decimals" gorm:"column:decimals;type:int;not null"`                          //小数位
	ID              uint64 `json:"id" gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true"`     //
	Name            string `json:"name" gorm:"column:name;type:varchar(200);not null"`                         //币种名称
	Symbol          string `json:"symbol" gorm:"column:symbol;type:varchar(200);not null"`                     //币种符号
}

// TableName ChainToken's table name
func (*ChainToken) TableName() string {
	return TableNameChainToken
}
